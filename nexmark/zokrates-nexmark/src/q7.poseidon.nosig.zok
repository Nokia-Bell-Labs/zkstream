// Copyright 2024 Nokia
// Licensed under the BSD 3-Clause Clear License.
// SPDX-License-Identifier: BSD-3-Clause-Clear

from "./shared" import
    MessageMetadata,
    Bids,
    Bid,
    HashPoseidon as Hash,
    SaltPoseidon as Salt,
    hashMessagePoseidon as hashMessage;
from "./gadgets" import
    max;

// Number of messages.
const u32 N_MESSAGES = 100;

def main(
    // Metadata of messages
    MessageMetadata[N_MESSAGES] msgs,
    // Values of messages
    private Bids<N_MESSAGES> bids,
    // Salts of messages
    private Salt[N_MESSAGES] salts
// outputs (public), hashed messages (public)
) -> (u64, u64, Hash[N_MESSAGES]) {
    // 1. Calculate hashes
    Hash[N_MESSAGES] mut hashes = [0; N_MESSAGES];
    for u32 i in 0..N_MESSAGES {
        hashes[i] = hashMessage(msgs[i], bids.values[i], salts[i]);
    }
    // 2. Calculate maximum
    Bid maximum = max(bids);
    return (maximum.price, maximum.auction, hashes);
}
